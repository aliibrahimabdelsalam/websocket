{"version":3,"sources":["index.js"],"names":["express","require","app","connectToDatabase","userRoute","chatRoute","authRoute","messageRoute","ErrorHandler","cookieParser","config","cors","NotFound","endPointStartWith","use","json","credentials","origin","port","process","env","PORT","urlDataBase","DATABASE_URL","limit","all","req","res","next","originalUrl","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMK,SAAS,GAAGL,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMM,YAAY,GAAGN,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAMO,YAAY,GAAGP,OAAO,CAAC,2BAAD,CAA5B;;AACA,IAAMQ,YAAY,GAAGR,OAAO,CAAC,eAAD,CAA5B;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBS,MAAlB;;AACA,IAAMC,IAAI,GAAGV,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMW,QAAQ,GAAGX,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMY,iBAAiB,GAAC,SAAxB;AACAX,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACe,IAAR,EAAR;AACAb,GAAG,CAACY,GAAJ,CACIH,IAAI,CAAC;AACDK,EAAAA,WAAW,EAAE,IADZ;AAEDC,EAAAA,MAAM,EAAE,CACJ,uBADI;AAFP,CAAD,CADR;AAQA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,YAAhC;AACArB,GAAG,CAACY,GAAJ,CAAQd,OAAO,CAACe,IAAR,CAAa;AAAES,EAAAA,KAAK,EAAE;AAAT,CAAb,CAAR;AAEAtB,GAAG,CAACY,GAAJ,CAAQL,YAAY,EAApB;AACAP,GAAG,CAACY,GAAJ,WAAWD,iBAAX,YAAqCP,SAArC;AACAJ,GAAG,CAACY,GAAJ,WAAWD,iBAAX,YAAqCT,SAArC;AACAF,GAAG,CAACY,GAAJ,WAAWD,iBAAX,YAAqCR,SAArC;AACAH,GAAG,CAACY,GAAJ,WAAWD,iBAAX,eAAwCN,YAAxC;AAGAL,GAAG,CAACuB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7BA,EAAAA,IAAI,CAAC,IAAIhB,QAAJ,qBAA0Bc,GAAG,CAACG,WAA9B,sBAA4D,GAA5D,CAAD,CAAJ;AACH,CAFD;AAGA3B,GAAG,CAACY,GAAJ,CAAQN,YAAR;AAGAL,iBAAiB,CAACmB,WAAD,CAAjB;AACApB,GAAG,CAAC4B,MAAJ,CAAWZ,IAAX,EAAiB,YAAM;AACnBa,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bd,IAA1B;AACH,CAFD","sourcesContent":["const express = require('express')\r\nconst app = express();\r\nconst connectToDatabase = require('./config/Database');\r\nconst userRoute = require('./routes/user');\r\nconst chatRoute = require('./routes/chat');\r\nconst authRoute = require('./routes/auth');\r\nconst messageRoute = require('./routes/message');\r\nconst ErrorHandler = require('./middleware/ErrorHandler');\r\nconst cookieParser = require('cookie-parser')\r\nrequire('dotenv').config();\r\nconst cors = require('cors');\r\nconst NotFound = require('./errors/NotFound');\r\nconst endPointStartWith='/api/v1'\r\napp.use(express.json())\r\napp.use(\r\n    cors({\r\n        credentials: true,\r\n        origin: [\r\n            'http://localhost:3000',\r\n        ],\r\n    })\r\n);\r\nconst port = process.env.PORT || 3000;\r\nconst urlDataBase = process.env.DATABASE_URL;\r\napp.use(express.json({ limit: '10kb' }));\r\n\r\napp.use(cookieParser());\r\napp.use(`${endPointStartWith}/auth`, authRoute);\r\napp.use(`${endPointStartWith}/user`, userRoute);\r\napp.use(`${endPointStartWith}/chat`, chatRoute);\r\napp.use(`${endPointStartWith}/message`, messageRoute);\r\n\r\n\r\napp.all('*', (req, res, next) => {\r\n    next(new NotFound(`Cant find ${req.originalUrl} on this server`, 404))\r\n})\r\napp.use(ErrorHandler)\r\n\r\n\r\nconnectToDatabase(urlDataBase)\r\napp.listen(port, () => {\r\n    console.log(\"localhost:\", port)\r\n})"],"file":"index.dev.js"}