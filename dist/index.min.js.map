{"version":3,"sources":["index.js"],"names":["express","require","app","AppError","chatRoute","connectToDatabase","ErrorHandler","config","userRoute","use","json","messageRoute","cors","origin","cookieParser","port","env","PORT","urlDataBase","process","DATABASE_URL","limit","credentials","next","concat","req","originalUrl","all"],"mappings":"aAAA,IAAMA,QAAQC,QAAQ,WAChBC,IAAMF,UADNA,kBAAgBC,QAAtB,qBAGME,SAASF,QAAQ,oBAFjBC,UAAaD,QAAnB,sBAIMG,UAAYH,QAAQ,sBAHpBI,aAAiBJ,QAAGA,yBAKpBK,aAAeL,QAAQ,6BAJvBE,aAASF,QAAQ,iBAMvBA,QAAQ,UAAUM,SALlB,IAAMC,KAASP,QAAGA,QASlBC,IAAIO,IAAIT,QAAQU,QAPhBR,IAAMS,IASFC,KAAK,CARHN,aAAeL,EAUbY,OAAQ,CATVC,4BAEAF,IAAIG,KAAGd,QAAOe,IAApBC,MAAA,IAaUC,YAAcC,QAAQH,IAAII,aAVhCX,IAAIT,IAAAA,QAAAU,KAAR,CAAAW,MAAA,UAGQC,IAAAA,IAAAA,gBACAT,IAAAA,IAAM,eACFL,WAHHN,IADTO,IAAA,eAAAL,WAQIF,IAAMa,IAAI,kBAAGJ,cAEbT,IAAIO,IAAIT,IAAAA,SAAAA,EAAQU,EAAKa,GAAEF,EAAO,IAAAlB,SAAA,aAAAqB,OAAAC,EAAAC,YAAA,mBAAA,QAElCxB,IAAIO,IAAIK,cAGRZ,kBAAQgB,aAERhB,IAAIyB,OAAJZ,KAAa,WACTQ,QAASpB,IAAAA,aAAJY","file":"index.min.js","sourcesContent":["const express=require('express')\r\nconst app = express();\r\nconst connectToDatabase = require('./config/Database');\r\nconst AppError=require('./utils/AppError')\r\nconst userRoute = require('./routes/userRoute');\r\nconst chatRoute = require('./routes/chatRoute');\r\nconst messageRoute = require('./routes/messageRoute');\r\nconst ErrorHandler = require('./middleware/ErrorHandler');\r\nconst cookieParser = require('cookie-parser')\r\nrequire('dotenv').config();\r\nconst cors = require('cors');\r\n\r\n\r\napp.use(express.json())\r\napp.use(\r\n    cors({\r\n        credentials: true,\r\n        origin: [\r\n            'http://localhost:3000',\r\n        ],\r\n    })\r\n    );\r\n    const port = process.env.PORT || 3000;\r\n    const urlDataBase = process.env.DATABASE_URL;\r\n    app.use(express.json({ limit: '10kb' }));\r\n\r\napp.use(cookieParser());\r\napp.use(\"/api/v1/user\", userRoute);\r\napp.use(\"/api/v1/chat\", chatRoute);\r\napp.use(\"/api/v1/message\", messageRoute);\r\n\r\napp.all('*', (req, res, next) => {\r\n    next(new AppError(`Cant find ${req.originalUrl} on this server`, 404))\r\n})\r\napp.use(ErrorHandler)\r\n\r\n\r\nconnectToDatabase(urlDataBase)\r\napp.listen(port, () => {\r\n    console.log(\"localhost:\",port)\r\n})"]}