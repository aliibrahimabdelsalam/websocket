"use strict";var AppError=require("../errors/AppError"),BadRequest=require("../errors/BadRequest"),NotFound=require("../errors/NotFound"),UnauthorizedError=require("../errors/unAuthorized"),ErrorHandler=function(e,r,s){switch(!0){case e instanceof UnauthorizedError:case e instanceof BadRequest:case e instanceof NotFound:return s.status(e.statusCode).json({status:"fail",message:e.message});case"ValidationError"===e.name:var a=Object.values(e.errors).map(function(e){return e.message}).join(", ");return s.status(400).json({status:"fail",message:a});case"MongoServerError"===e.name&&11e3===e.code:var t=Object.keys(e.keyValue)[0];return s.status(400).json({status:"fail",message:"The ".concat(t," is already taken.")});case"JsonWebTokenError"===e.name:return s.status(401).json({status:"fail",message:"Invalid token. Please log in again."});case"TokenExpiredError"===e.name:return s.status(401).json({status:"fail",message:"Token is expired. Please log in again."});case 404===e.status:return s.status(404).json({status:"fail",message:"Cannot find ".concat(r.originalUrl," on this server.")});default:return s.status(500).json({status:"error",message:"Internal server error."})}};module.exports=ErrorHandler;
//# sourceMappingURL=ErrorHandler.min.js.map
